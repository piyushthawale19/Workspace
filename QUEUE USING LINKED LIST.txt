#include <stdio.h>
#include<stdlib.h> 
struct node
{
    int data;
    struct node *next;
}; 
struct node *front=NULL;
struct node *rear=NULL;
struct node *newnode;
void enqueue();
void dequeue();
void display();
void main()
{
    int ch;
    while(1)
    {
        printf("\n1.enqueue\n2.dequeue\n3.display\n4.exit\n");
        printf("Enter your choice");
        scanf("%d",&ch);
        switch(ch)
        {
            case 1:enqueue();
                   break;
            case 2:dequeue();
                   break;
            case 3:display();
                   break;
            case 4:exit(0);
                   break;
            default:printf("wrong choice");
                
        }
    }
}
void enqueue()
{
    int val;
    printf("enter the value");
     scanf("%d",&val);

    newnode=(struct node*)malloc(sizeof(struct node));
    if(newnode==NULL)
    {
        printf("memory is not allocated");
    }
    else
    {
        if(front==NULL&&rear==NULL)
       {
        newnode->data=val;
        newnode->next=NULL;
        front=rear=newnode;
       }
       else
       {
          newnode->data=val;
          newnode->next=NULL;
          rear->next=newnode;
          rear=newnode;
       }
    }
}
void dequeue()
{
    struct node *temp;
    temp=front;
    if(front==NULL)
    {
        printf("queue is empty");
    }
    else
    {
        printf("\n%d is deleted",front->data);
        front=front->next;
        temp->next=NULL;
        free(temp);
    }
}
void display()
{
    struct node *temp;
    temp=front;
    if(front==NULL)
    {
        printf("queue is empty");
    }
    else
    {
        while(temp!=NULL)
        {
            printf("\n%d",temp->data);
            temp=temp->next;
       }
  }   
}
